INTTK int
IDENFR x
LBRACK [
INTCON 100
<无符号整数>
RBRACK ]
<变量定义>
SEMICN ;
INTTK int
IDENFR y
LBRACK [
INTCON 100
<无符号整数>
RBRACK ]
<变量定义>
SEMICN ;
INTTK int
IDENFR num
LBRACK [
INTCON 100
<无符号整数>
RBRACK ]
<变量定义>
SEMICN ;
<变量说明>
INTTK int
IDENFR Middle_Number_1
<声明头部>
LPARENT (
INTTK int
IDENFR N
<参数表>
RPARENT )
LBRACE {
INTTK int
IDENFR middle_n
COMMA ,
IDENFR i
COMMA ,
IDENFR j
COMMA ,
IDENFR biggest
COMMA ,
IDENFR biggest_tag
COMMA ,
IDENFR intermediate
<变量定义>
SEMICN ;
INTTK int
IDENFR num_copy
LBRACK [
INTCON 100
<无符号整数>
RBRACK ]
<变量定义>
SEMICN ;
<变量说明>
IDENFR middle_n
ASSIGN =
IDENFR N
<因子>
DIV /
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR j
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR biggest
ASSIGN =
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR biggest_tag
ASSIGN =
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR intermediate
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
DOTK do
LBRACE {
IDENFR intermediate
ASSIGN =
IDENFR num
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR num_copy
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR intermediate
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR i
ASSIGN =
IDENFR i
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
WHILETK while
LPARENT (
IDENFR i
<因子>
<项>
<表达式>
LSS <
IDENFR N
<因子>
<项>
<表达式>
<条件>
RPARENT )
<循环语句>
<语句>
SEMICN ;
<语句>
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
DOTK do
LBRACE {
IDENFR j
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR biggest
ASSIGN =
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR biggest_tag
ASSIGN =
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
FORTK for
LPARENT (
IDENFR j
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR j
<因子>
<项>
<表达式>
LSS <
IDENFR N
<因子>
<项>
MINU -
IDENFR i
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR j
ASSIGN =
IDENFR j
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR num_copy
LBRACK [
IDENFR j
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
GRE >
IDENFR biggest
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR biggest
ASSIGN =
IDENFR num_copy
LBRACK [
IDENFR j
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR biggest_tag
ASSIGN =
IDENFR j
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
IDENFR intermediate
ASSIGN =
IDENFR num_copy
LBRACK [
IDENFR N
<因子>
<项>
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
MINU -
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR num_copy
LBRACK [
IDENFR N
<因子>
<项>
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
MINU -
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR biggest
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR num_copy
LBRACK [
IDENFR biggest_tag
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR intermediate
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR i
ASSIGN =
IDENFR i
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
WHILETK while
LPARENT (
IDENFR i
<因子>
<项>
<表达式>
LSS <
IDENFR N
<因子>
<项>
<表达式>
<条件>
RPARENT )
<循环语句>
<语句>
SEMICN ;
<语句>
RETURNTK return
LPARENT (
IDENFR num_copy
LBRACK [
IDENFR middle_n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
INTTK int
IDENFR Middle_Number_2
<声明头部>
LPARENT (
INTTK int
IDENFR N
<参数表>
RPARENT )
LBRACE {
INTTK int
IDENFR middle_n
COMMA ,
IDENFR i
COMMA ,
IDENFR j
COMMA ,
IDENFR biggest
COMMA ,
IDENFR biggest_tag
COMMA ,
IDENFR intermediate
<变量定义>
SEMICN ;
INTTK int
IDENFR num_copy
LBRACK [
INTCON 100
<无符号整数>
RBRACK ]
<变量定义>
SEMICN ;
<变量说明>
IDENFR middle_n
ASSIGN =
IDENFR N
<因子>
DIV /
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR j
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR biggest
ASSIGN =
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR biggest_tag
ASSIGN =
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR intermediate
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR i
<因子>
<项>
<表达式>
LSS <
IDENFR N
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
IDENFR intermediate
ASSIGN =
IDENFR num
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR num_copy
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR intermediate
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR i
<因子>
<项>
<表达式>
LSS <
IDENFR N
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
IDENFR j
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR biggest
ASSIGN =
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR biggest_tag
ASSIGN =
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
WHILETK while
LPARENT (
IDENFR j
<因子>
<项>
<表达式>
LSS <
IDENFR N
<因子>
<项>
MINU -
IDENFR i
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR num_copy
LBRACK [
IDENFR j
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
GRE >
IDENFR biggest
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR biggest
ASSIGN =
IDENFR num_copy
LBRACK [
IDENFR j
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR biggest_tag
ASSIGN =
IDENFR j
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
IDENFR j
ASSIGN =
IDENFR j
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
IDENFR intermediate
ASSIGN =
IDENFR num_copy
LBRACK [
IDENFR N
<因子>
<项>
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
MINU -
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR num_copy
LBRACK [
IDENFR N
<因子>
<项>
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
MINU -
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR biggest
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR num_copy
LBRACK [
IDENFR biggest_tag
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR intermediate
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
RETURNTK return
LPARENT (
IDENFR num_copy
LBRACK [
IDENFR middle_n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
INTTK int
IDENFR Middle_Number_3
<声明头部>
LPARENT (
INTTK int
IDENFR N
<参数表>
RPARENT )
LBRACE {
INTTK int
IDENFR middle_n
COMMA ,
IDENFR i
COMMA ,
IDENFR j
COMMA ,
IDENFR biggest
COMMA ,
IDENFR biggest_tag
COMMA ,
IDENFR intermediate
<变量定义>
SEMICN ;
INTTK int
IDENFR num_copy
LBRACK [
INTCON 100
<无符号整数>
RBRACK ]
<变量定义>
SEMICN ;
<变量说明>
IDENFR middle_n
ASSIGN =
IDENFR N
<因子>
DIV /
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR j
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR biggest
ASSIGN =
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR biggest_tag
ASSIGN =
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR intermediate
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
WHILETK while
LPARENT (
IDENFR i
<因子>
<项>
<表达式>
LSS <
IDENFR N
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR intermediate
ASSIGN =
IDENFR num
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR num_copy
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR intermediate
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR i
ASSIGN =
IDENFR i
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
WHILETK while
LPARENT (
IDENFR i
<因子>
<项>
<表达式>
LSS <
IDENFR N
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR j
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR biggest
ASSIGN =
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR biggest_tag
ASSIGN =
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
FORTK for
LPARENT (
IDENFR j
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR j
<因子>
<项>
<表达式>
LSS <
IDENFR N
<因子>
<项>
MINU -
IDENFR i
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR j
ASSIGN =
IDENFR j
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR num_copy
LBRACK [
IDENFR j
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
GRE >
IDENFR biggest
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR biggest
ASSIGN =
IDENFR num_copy
LBRACK [
IDENFR j
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR biggest_tag
ASSIGN =
IDENFR j
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
IDENFR intermediate
ASSIGN =
IDENFR num_copy
LBRACK [
IDENFR N
<因子>
<项>
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
MINU -
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR num_copy
LBRACK [
IDENFR N
<因子>
<项>
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
MINU -
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR biggest
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR num_copy
LBRACK [
IDENFR biggest_tag
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR intermediate
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR i
ASSIGN =
IDENFR i
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
RETURNTK return
LPARENT (
IDENFR num_copy
LBRACK [
IDENFR middle_n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
INTTK int
IDENFR Nearest_Point_1
<声明头部>
LPARENT (
INTTK int
IDENFR n
COMMA ,
INTTK int
IDENFR N
<参数表>
RPARENT )
LBRACE {
INTTK int
IDENFR i
COMMA ,
IDENFR j
COMMA ,
IDENFR distance
COMMA ,
IDENFR tag
<变量定义>
SEMICN ;
<变量说明>
IDENFR distance
ASSIGN =
INTCON 2147483647
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR tag
ASSIGN =
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
DOTK do
LBRACE {
IFTK if
LPARENT (
LPARENT (
IDENFR x
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR x
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
MULT *
LPARENT (
IDENFR x
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR x
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
PLUS +
LPARENT (
IDENFR y
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR y
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
MULT *
LPARENT (
IDENFR y
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR y
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
<表达式>
LSS <
IDENFR distance
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR i
<因子>
<项>
<表达式>
NEQ !=
IDENFR n
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR distance
ASSIGN =
LPARENT (
IDENFR x
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR x
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
MULT *
LPARENT (
IDENFR x
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR x
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
PLUS +
LPARENT (
IDENFR y
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR y
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
MULT *
LPARENT (
IDENFR y
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR y
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR tag
ASSIGN =
IDENFR i
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
IDENFR i
ASSIGN =
IDENFR i
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
WHILETK while
LPARENT (
IDENFR i
<因子>
<项>
<表达式>
LSS <
IDENFR N
<因子>
<项>
<表达式>
<条件>
RPARENT )
<循环语句>
<语句>
SEMICN ;
<语句>
IFTK if
LPARENT (
IDENFR tag
<因子>
<项>
<表达式>
EQL ==
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON Can not find Nearest_Point
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
RETURNTK return
LPARENT (
IDENFR tag
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
INTTK int
IDENFR Nearest_Point_2
<声明头部>
LPARENT (
INTTK int
IDENFR n
COMMA ,
INTTK int
IDENFR N
<参数表>
RPARENT )
LBRACE {
INTTK int
IDENFR i
COMMA ,
IDENFR j
COMMA ,
IDENFR distance
COMMA ,
IDENFR tag
<变量定义>
SEMICN ;
<变量说明>
IDENFR distance
ASSIGN =
INTCON 2147483647
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR tag
ASSIGN =
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR i
<因子>
<项>
<表达式>
LSS <
IDENFR N
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
IFTK if
LPARENT (
LPARENT (
IDENFR x
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR x
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
MULT *
LPARENT (
IDENFR x
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR x
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
PLUS +
LPARENT (
IDENFR y
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR y
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
MULT *
LPARENT (
IDENFR y
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR y
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
<表达式>
LSS <
IDENFR distance
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR i
<因子>
<项>
<表达式>
NEQ !=
IDENFR n
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR distance
ASSIGN =
LPARENT (
IDENFR x
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR x
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
MULT *
LPARENT (
IDENFR x
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR x
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
PLUS +
LPARENT (
IDENFR y
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR y
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
MULT *
LPARENT (
IDENFR y
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR y
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR tag
ASSIGN =
IDENFR i
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
IFTK if
LPARENT (
IDENFR tag
<因子>
<项>
<表达式>
EQL ==
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON Can not find Nearest_Point
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
RETURNTK return
LPARENT (
IDENFR tag
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
INTTK int
IDENFR Nearest_Point_3
<声明头部>
LPARENT (
INTTK int
IDENFR n
COMMA ,
INTTK int
IDENFR N
<参数表>
RPARENT )
LBRACE {
INTTK int
IDENFR i
COMMA ,
IDENFR j
COMMA ,
IDENFR distance
COMMA ,
IDENFR tag
<变量定义>
SEMICN ;
<变量说明>
IDENFR distance
ASSIGN =
INTCON 2147483647
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR tag
ASSIGN =
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
WHILETK while
LPARENT (
IDENFR i
<因子>
<项>
<表达式>
LSS <
IDENFR N
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IFTK if
LPARENT (
LPARENT (
IDENFR x
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR x
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
MULT *
LPARENT (
IDENFR x
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR x
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
PLUS +
LPARENT (
IDENFR y
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR y
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
MULT *
LPARENT (
IDENFR y
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR y
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
<表达式>
LSS <
IDENFR distance
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR i
<因子>
<项>
<表达式>
NEQ !=
IDENFR n
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR distance
ASSIGN =
LPARENT (
IDENFR x
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR x
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
MULT *
LPARENT (
IDENFR x
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR x
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
PLUS +
LPARENT (
IDENFR y
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR y
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
MULT *
LPARENT (
IDENFR y
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR y
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR tag
ASSIGN =
IDENFR i
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
IDENFR i
ASSIGN =
IDENFR i
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
IFTK if
LPARENT (
IDENFR tag
<因子>
<项>
<表达式>
EQL ==
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON Can not find Nearest_Point
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
RETURNTK return
LPARENT (
IDENFR tag
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR const1
ASSIGN =
MINU -
INTCON 30
<无符号整数>
<整数>
COMMA ,
IDENFR const2
ASSIGN =
PLUS +
INTCON 30
<无符号整数>
<整数>
<常量定义>
SEMICN ;
<常量说明>
INTTK int
IDENFR N
COMMA ,
IDENFR point_n
COMMA ,
IDENFR tag
COMMA ,
IDENFR i
COMMA ,
IDENFR k
<变量定义>
SEMICN ;
INTTK int
IDENFR correct1
COMMA ,
IDENFR correct2
<变量定义>
SEMICN ;
<变量说明>
SCANFTK scanf
LPARENT (
IDENFR N
RPARENT )
<读语句>
SEMICN ;
<语句>
IFTK if
LPARENT (
IDENFR N
<因子>
<项>
<表达式>
GRE >
INTCON 100
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR N
ASSIGN =
INTCON 100
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
FORTK for
LPARENT (
IDENFR k
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR k
<因子>
<项>
<表达式>
LSS <
IDENFR N
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR k
ASSIGN =
IDENFR k
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
SCANFTK scanf
LPARENT (
IDENFR i
RPARENT )
<读语句>
SEMICN ;
<语句>
IDENFR num
LBRACK [
IDENFR k
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR i
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
FORTK for
LPARENT (
IDENFR k
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR k
<因子>
<项>
<表达式>
LSS <
IDENFR N
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR k
ASSIGN =
IDENFR k
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
SCANFTK scanf
LPARENT (
IDENFR i
RPARENT )
<读语句>
SEMICN ;
<语句>
IDENFR x
LBRACK [
IDENFR k
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR i
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
FORTK for
LPARENT (
IDENFR k
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR k
<因子>
<项>
<表达式>
LSS <
IDENFR N
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR k
ASSIGN =
IDENFR k
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
SCANFTK scanf
LPARENT (
IDENFR i
RPARENT )
<读语句>
SEMICN ;
<语句>
IDENFR y
LBRACK [
IDENFR k
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR i
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
SCANFTK scanf
LPARENT (
IDENFR point_n
RPARENT )
<读语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON Caculate of const is 
<字符串>
COMMA ,
IDENFR const1
<因子>
MULT *
IDENFR const2
<因子>
<项>
PLUS +
IDENFR const1
<因子>
<项>
MINU -
IDENFR const2
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR correct1
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON In function 1,Middle_Number is 
<字符串>
COMMA ,
IDENFR Middle_Number_1
LPARENT (
IDENFR N
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON In function 2,Middle_Number is 
<字符串>
COMMA ,
IDENFR Middle_Number_2
LPARENT (
IDENFR N
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON In function 3,Middle_Number is 
<字符串>
COMMA ,
IDENFR Middle_Number_3
LPARENT (
IDENFR N
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
IFTK if
LPARENT (
IDENFR Middle_Number_1
LPARENT (
IDENFR N
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
EQL ==
IDENFR Middle_Number_2
LPARENT (
IDENFR N
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR Middle_Number_2
LPARENT (
IDENFR N
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
EQL ==
IDENFR Middle_Number_3
LPARENT (
IDENFR N
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON Middle_Number Answer Correct!
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR correct1
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
LBRACE {
PRINTFTK printf
LPARENT (
STRCON Middle_Number Error1!
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
LBRACE {
PRINTFTK printf
LPARENT (
STRCON Middle_Number Error2!
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
IDENFR correct2
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR tag
ASSIGN =
IDENFR Nearest_Point_1
LPARENT (
IDENFR point_n
<因子>
<项>
<表达式>
COMMA ,
IDENFR N
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON In function 1,Nearest point is 
<字符串>
COMMA ,
IDENFR tag
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR tag
ASSIGN =
IDENFR Nearest_Point_2
LPARENT (
IDENFR point_n
<因子>
<项>
<表达式>
COMMA ,
IDENFR N
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON In function 2,Nearest point is 
<字符串>
COMMA ,
IDENFR tag
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR tag
ASSIGN =
IDENFR Nearest_Point_3
LPARENT (
IDENFR point_n
<因子>
<项>
<表达式>
COMMA ,
IDENFR N
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON In function 3,Nearest point is 
<字符串>
COMMA ,
IDENFR tag
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
IFTK if
LPARENT (
IDENFR Nearest_Point_1
LPARENT (
IDENFR point_n
<因子>
<项>
<表达式>
COMMA ,
IDENFR N
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
EQL ==
IDENFR Nearest_Point_2
LPARENT (
IDENFR point_n
<因子>
<项>
<表达式>
COMMA ,
IDENFR N
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR Nearest_Point_2
LPARENT (
IDENFR point_n
<因子>
<项>
<表达式>
COMMA ,
IDENFR N
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
EQL ==
IDENFR Nearest_Point_3
LPARENT (
IDENFR point_n
<因子>
<项>
<表达式>
COMMA ,
IDENFR N
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON Nearest_Point Answer Correct!
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR correct2
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
LBRACE {
PRINTFTK printf
LPARENT (
STRCON Nearest_Point Error1!
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
LBRACE {
PRINTFTK printf
LPARENT (
STRCON Nearest_Point Error2!
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
IFTK if
LPARENT (
IDENFR correct1
<因子>
<项>
<表达式>
EQL ==
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR correct2
<因子>
<项>
<表达式>
EQL ==
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON All Cyclic Procedure Right!
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
LBRACE {
PRINTFTK printf
LPARENT (
STRCON Cyclic Procedure Error!
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
LBRACE {
PRINTFTK printf
LPARENT (
STRCON Cyclic Procedure Error!
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
<复合语句>
RBRACE }
<主函数>
<程序>
