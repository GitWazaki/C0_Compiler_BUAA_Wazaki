// C0_Compiler_BUAA_Wazaki gen Mid Code


function fib start
  Block fib
  T0 = 0;
  T1 = 0;
  $k1 = T0;
  $k0 = 4;
  $k1 = $k1 * $k0;
  $k0 = -8;
  $k0 = $k0 - $k1;
  $k1 = $fp;
  $k0 = $k0 + $k1;
  T2 = 1;
  T3 = 1;
  $k1 = T2;
  $k0 = 4;
  $k1 = $k1 * $k0;
  $k0 = -8;
  $k0 = $k0 - $k1;
  $k1 = $fp;
  $k0 = $k0 + $k1;
  T4 = 2;
  Block for_1_start
  if (T5 > T6) jump for_1_end
  Block for_1_body
  T9 = 1;
  T10 = T8 - T9;
  $k1 = T10;
  $k0 = 4;
  $k1 = $k1 * $k0;
  $k0 = -8;
  $k0 = $k0 - $k1;
  $k1 = $fp;
  $k0 = $k0 + $k1;
  T13 = 2;
  T14 = T12 - T13;
  $k1 = T14;
  $k0 = 4;
  $k1 = $k1 * $k0;
  $k0 = -8;
  $k0 = $k0 - $k1;
  $k1 = $fp;
  $k0 = $k0 + $k1;
  T16 = T11 + T15;
  $k1 = T7;
  $k0 = 4;
  $k1 = $k1 * $k0;
  $k0 = -8;
  $k0 = $k0 - $k1;
  $k1 = $fp;
  $k0 = $k0 + $k1;
  T18 = 1;
  T19 = T17 + T18;
  jump for_1_start;
  Block for_1_end
  $k1 = T20;
  $k0 = 4;
  $k1 = $k1 * $k0;
  $k0 = -8;
  $k0 = $k0 - $k1;
  $k1 = $fp;
  $k0 = $k0 + $k1;
  $v0 = T21;
  jump _RETURN_fib;
  Block _RETURN_fib
  return ;
end funciton


function main start
  Block main
  $fp = $sp;
  push regpool;
  T0 = 7;
  $fp = $sp + 4;
  call fib;
  pop regpool;
  T1 = $v0;
  print(T1);
  push regpool;
  T2 = 8;
  $fp = $sp + 4;
  call fib;
  pop regpool;
  T3 = $v0;
  print(T3);
  Block _RETURN_main
end funciton

